import azure.functions as func
from azure.storage.blob import BlobServiceClient
from pptx import Presentation
from pptx.util import Pt
import io
import os
import json
from datetime import datetime
from azure.identity import DefaultAzureCredential


def main(req: func.HttpRequest) -> func.HttpResponse:
    try:
        # Parse request body
        req_body = req.get_json()
        agent_name = req_body.get("agent_name", "Unknown Agent")
        content = req_body.get("content", "")
        title = req_body.get(
            "title", f"AI Report - {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}"
        )

        if not content:
            return func.HttpResponse(
                "Missing 'content' in request body", status_code=400
            )

        # Generate PowerPoint
        ppt_bytes = generate_ppt(agent_name, title, content)

        # Upload to Azure Blob Storage
        blob_url = upload_to_blob(ppt_bytes, title)

        # Return URL
        return func.HttpResponse(
            json.dumps({"status": "success", "url": blob_url}),
            mimetype="application/json",
            status_code=200,
        )

    except Exception as e:
        return func.HttpResponse(str(e), status_code=500)


def generate_ppt(agent_name, title, content):
    """Generate a PowerPoint presentation from text content."""
    prs = Presentation()

    # --- Title slide ---
    title_slide_layout = prs.slide_layouts[0]
    slide = prs.slides.add_slide(title_slide_layout)
    slide.shapes.title.text = title
    slide.placeholders[1].text = f"Generated by {agent_name}"

    # --- Content slide ---
    bullet_slide_layout = prs.slide_layouts[1]
    slide = prs.slides.add_slide(bullet_slide_layout)
    shapes = slide.shapes
    shapes.title.text = "Summary"

    body_shape = shapes.placeholders[1]
    tf = body_shape.text_frame
    tf.word_wrap = True

    # Split the agentâ€™s content into bullet points
    for line in content.split("\n"):
        line = line.strip()
        if line:
            p = tf.add_paragraph()
            p.text = line
            p.level = 0
            p.font.size = Pt(14)

    # Save to in-memory bytes
    ppt_stream = io.BytesIO()
    prs.save(ppt_stream)
    ppt_stream.seek(0)
    return ppt_stream


def upload_to_blob(ppt_bytes, title):
    """Upload PowerPoint bytes to Azure Blob Storage."""
    account_name = os.getenv("STORAGE_ACCOUNT_NAME")
    # account_key = os.getenv("STORAGE_ACCOUNT_KEY")
    container = os.getenv("STORAGE_CONTAINER")

    blob_service_client = BlobServiceClient(
        f"https://{account_name}.blob.core.windows.net", 
        credential=DefaultAzureCredential()
    )

    blob_name = f"{title.replace(' ', '_')}.pptx"
    blob_client = blob_service_client.get_blob_client(
        container=container, blob=blob_name
    )
    blob_client.upload_blob(ppt_bytes, overwrite=True)

    return blob_client.url
